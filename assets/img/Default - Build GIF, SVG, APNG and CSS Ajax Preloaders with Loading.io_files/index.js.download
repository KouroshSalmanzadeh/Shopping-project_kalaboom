(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
// Generated by LiveScript 1.3.0
(function(){
  var ret;
  ret = {
    id: 'default',
    type: 'spinner',
    name: 'Default',
    desc: "Common spinner used in various website.",
    tags: ['ball', 'circle', 'rotate', 'spin', 'ring'],
    slug: "circle-dot-preloader",
    license: 'pro',
    edit: {
      radius: {
        name: "Radius",
        type: 'number',
        'default': 25,
        priority: 1.3
      },
      ballSize: {
        name: "Ball Size",
        type: 'number',
        'default': 5,
        priority: 1.4
      },
      count: {
        name: "Ball Count",
        type: 'number',
        'default': 12,
        priority: 1.5
      },
      c1: {
        name: "Color 1",
        type: 'color',
        priority: 1.1,
        'default': '#00e2ff'
      },
      c2: {
        name: "Color 2",
        type: 'color',
        priority: 1.2,
        'default': '#dcfff8'
      },
      palette: {
        'default': {
          colors: ['#00e2ff', '#dcfff8']
        }
      }
    },
    download: function(arg$){
      var type, c, s, ref$, css1, count, ret, i$, i, a, cx, cy, r, b, css2;
      type = arg$.type;
      if (type !== 'css') {
        return;
      }
      c = this.config;
      s = (ref$ = c.size / 100) > 1 ? ref$ : 1;
      css1 = "@keyframes $id {\n 0% {\n   width: " + c.ballSize * 2 * s * 0.6 + "px;\n   height: " + c.ballSize * 2 * s * 0.6 + "px;\n   background: " + c.c2 + ";\n }\n 25% {\n   width: " + c.ballSize * 2 * s * 0.6 + "px;\n   height: " + c.ballSize * 2 * s * 0.6 + "px;\n   background: " + c.c2 + ";\n }\n 50% {\n   width: " + c.ballSize * 2 * s + "px;\n   height: " + c.ballSize * 2 * s + "px;\n   background: " + c.c1 + ";\n }\n 75% {\n   width: " + c.ballSize * 2 * s * 0.6 + "px;\n   height: " + c.ballSize * 2 * s * 0.6 + "px;\n   background: " + c.c2 + ";\n }\n 100% {\n   width: " + c.ballSize * 2 * s * 0.6 + "px;\n   height: " + c.ballSize * 2 * s * 0.6 + "px;\n   background: " + c.c2 + ";\n }\n}\n.$id {\n  position: relative;\n}\n.$id div {\n  position: absolute;\n  transform: translate(-50%,-50%);\n  animation: $id " + 1 / c.speed + "s linear infinite;\n  border-radius: 50%;\n}";
      count = +c.count;
      ret = [];
      for (i$ = 0; i$ < count; ++i$) {
        i = i$;
        a = 2 * Math.PI * i / (count || 1);
        cx = (c.radius * Math.cos(a) + 50) * s;
        cy = (c.radius * Math.sin(a) + 50) * s;
        r = c.ballSize;
        b = -(count - i - 1) / count;
        ret.push(".$id div:nth-child(" + (i + 1) + ") {\n  animation-delay: " + b + "s;\n  left: " + cx + "px;\n  top: " + cy + "px;\n}");
      }
      css2 = ret.join("\n");
      return {
        html: repeatString$("<div></div>", c.count),
        css: css1 + "\n" + css2
      };
    },
    dom: function(config){
      var svg, count, ref$, c1, c2, i$, i, a, cx, cy, r, r2, rs, fs, c, b;
      svg = [];
      count = +config.count;
      ref$ = {
        c1: config.c1,
        c2: config.c2
      }, c1 = ref$.c1, c2 = ref$.c2;
      for (i$ = 0; i$ < count; ++i$) {
        i = i$;
        a = 2 * Math.PI * i / (count || 1);
        cx = config.radius * Math.cos(a) + 50;
        cy = config.radius * Math.sin(a) + 50;
        r = config.ballSize;
        r2 = r * 0.6;
        rs = [r2, r2, r, r2, r2].join(";");
        fs = [c2, c2, c1, c2, c2].join(";");
        c = config.c2;
        b = -1 * (count - i - 1) / (count * config.speed);
        svg.push("<circle cx=\"" + cx + "\" cy=\"" + cy + "\" fill=\"" + c + "\" r=\"" + r + "\">\n  <animate attributeName=\"r\" values=\"" + rs + "\" times=\"0;0.1;0.2;0.3;1\" dur=\"" + 1 / config.speed + "s\"\n  repeatCount=\"indefinite\" begin=\"" + b + "s\"/>\n  <animate attributeName=\"fill\" values=\"" + fs + "\" repeatCount=\"indefinite\"\n  times=\"0;0.1;0.2;0.3;1\" dur=\"" + 1 / config.speed + "s\" begin=\"" + b + "s\"/>\n</circle>");
      }
      return svg.join("");
    }
  };
  if (typeof module != 'undefined' && module !== null) {
    module.exports = ret;
  }
  if (typeof ModManager != 'undefined' && ModManager !== null) {
    ModManager.register(ret);
  }
  return ret;
})();
function repeatString$(str, n){
  for (var r = ''; n > 0; (n >>= 1) && (str += str)) if (n & 1) r += str;
  return r;
}
},{}]},{},[1]);
